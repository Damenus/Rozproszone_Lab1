// ConsoleApplication2.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <string.h>
#include <stdio.h>
#include <malloc.h>
#include <iostream>

using namespace std;

struct element
{
	struct element *previous;
	int number;
	struct element *next;
};
element * begin1;
element * end1;

struct element * insert(int obj, struct element *ptr)
{
	struct element *p;
	p = ptr->next; /* weŸ adres analizowanego elementu */
	if (p != NULL) /* czy koniec listy */
	{
		if (obj > (p->number))
			p->next = insert(obj, p);
		else
		{
			/* utwórz nowy element */
			p->previous = (struct element *)
				malloc(sizeof(struct element));
			/* zapamiêtaj adres nowego elementu */
			p = p->previous;
			/* zainicjuj sk³adowe nowego elementu */
			p->number = obj;
			p->next = ptr->next;
			p->previous = ptr;
			if (p->previous = NULL)
				begin1 = p;
		}
	}
	else /* koniec listy */
	{ /* utwórz nowy element */
		p = (struct element *)malloc(sizeof(struct element));
		/* zainicjuj sk³adowe nowego elementu */
		p->number = obj;
		p->next = NULL;
		p->previous = ptr;
		
		end1 = p;
	}
	return p; /* zwróæ adres nowego elementu */
}

///////////////////////////////////////////
struct element * deletewill(int obj, struct element *ptr)
{
	struct element *p;
	p = ptr->next; /* weŸ adres analizowanego elementu */
	if (p != NULL) /* czy koniec listy */
	{
		if (obj != (ptr->number))
			p->next = deletewill(obj, p);
		else
		{
			/* usun */
			//p->previous = (struct element *)
			//	malloc(sizeof(struct element));
			/* zapamiêtaj adres nowego elementu */
			//p = p->previous;
			/* zainicjuj sk³adowe nowego elementu */
			//p->number = obj;
			p->next->previous = p->next;
			p->previous->next = p->previous;

			free(p);
		}
	}
	else /* koniec listy */
	{ 
		cout << "Nie ma liczby" << endl;
	}
	return NULL;
}



void print_asc() {

	element *p = begin1;
	do {		
		cout << p->number << endl;
		p = p->next;
	} while (p->next != end1);

}

void print_desc() {


}

int main()
{

	int liczba, tryb;

	do {
		cout << "Podaj 1 jesli insert, 2 na delete, 3 na print_asc, 4 na print_desc, 5 na wyjdz " << endl;
		cin >> tryb;
		if (tryb == 1) {
			cout << "WprowadŸ liczbe: ";
			cin >> liczba;

			begin1 = (struct element *) malloc(sizeof(struct element));
			begin1->next = NULL;
			begin1->previous = NULL;
			begin1->next = insert(liczba, begin1);

			cout << "Dodano!" << endl;
		}
		else if (tryb == 2) {
			cout << "WprowadŸ liczbe: ";
			cin >> liczba;		

			begin1 = (struct element *) malloc(sizeof(struct element));
			begin1->next = NULL;
			begin1->previous = NULL;
			begin1->next = deletewill(liczba, begin1);

			cout << "Usunieto!" << endl;
		}
		else if (tryb == 3) {
			print_asc();
		}
		else if (tryb == 4) {

		}
	} while (tryb != 5);

	return 0;
}

